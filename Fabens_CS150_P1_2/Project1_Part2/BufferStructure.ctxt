#BlueJ class context
comment0.target=BufferStructure
comment0.text=\r\n\ Structure\ holding\ a\ list\ of\ Es,\ now\ in\ a\ new\ and\ improved\ Linked\ List\ format\!\ \r\n\r\n\ @author\ Peter\ Fabens\r\n\ @version\ 2/20/2022\r\n
comment1.params=type
comment1.target=BufferStructure(java.lang.String)
comment1.text=\r\n\ Default\ constructor.\ Just\ makes\ sure\ values\ are\ initialized\ at\ starting\ vals.\r\n
comment10.params=
comment10.target=boolean\ insert_empty_line_above()
comment10.text=\r\n\ Inserts\ a\ line\ with\ no\ characters\ directly\ above\ the\ current\ line.\r\n\ \r\n\ Assumption\:\ Cursor\ should\ shift\ down\ with\ current\ line.\r\n
comment11.params=
comment11.target=boolean\ insert_empty_line_below()
comment11.text=\r\n\ Inserts\ a\ line\ with\ no\ characters\ directly\ below\ the\ current\ line.\r\n
comment12.params=
comment12.target=int\ line_count()
comment12.text=\r\n\ Returns\ the\ number\ of\ lines\ in\ the\ structure.\r\n
comment13.params=
comment13.target=int\ curr_line_length()
comment13.text=\r\n\ Returns\ the\ length\ of\ the\ line\ the\ cursor\ is\ on.\r\n
comment14.params=
comment14.target=int\ cursor_line_position()
comment14.text=\r\n\ Returns\ the\ index\ of\ the\ line\ the\ cursor\ is\ on.\r\n
comment15.params=
comment15.target=int\ cursor_position_in_line()
comment15.text=\r\n\ Returns\ the\ index\ of\ the\ cursor\ in\ the\ current\ line.\r\n
comment16.params=
comment16.target=boolean\ cursor_left()
comment16.text=\r\n\ Move\ cursor\ left\ 1\r\n\ \r\n\ @returns\ whether\ the\ operation\ worked\r\n
comment17.params=char_count
comment17.target=boolean\ cursor_left(int)
comment17.text=\r\n\ Move\ cursor\ left\r\n\ \r\n\ @param\ char_count\ dist\ to\ move\r\n\ \r\n\ @returns\ whether\ cursor\ moved\ at\ all\r\n
comment18.params=
comment18.target=boolean\ cursor_right()
comment18.text=\r\n\ Move\ cursor\ right\ 1\r\n\ \r\n\ @returns\ whether\ the\ operation\ worked\r\n
comment19.params=char_count
comment19.target=boolean\ cursor_right(int)
comment19.text=\r\n\ Move\ cursor\ right\r\n\ \r\n\ @param\ char_count\ dist\ to\ move\r\n\ \r\n\ @returns\ whether\ cursor\ moved\ at\ all\r\n
comment2.params=line
comment2.target=int\ length(int)
comment2.text=\r\n\ Returns\ the\ length\ of\ the\ specified\ line.\r\n\ \r\n\ @param\ line\ line\ to\ analysze\ the\ length\ of\r\n
comment20.params=
comment20.target=boolean\ cursor_up()
comment20.text=\r\n\ Move\ cursor\ up\r\n\ \r\n\ @returns\ whether\ the\ operation\ worked\r\n
comment21.params=line_count
comment21.target=boolean\ cursor_up(int)
comment21.text=\r\n\ Move\ cursor\ up\r\n\ \r\n\ @param\ line_count\ dist\ to\ move\r\n\ \r\n\ @returns\ whether\ cursor\ moved\ at\ all\r\n
comment22.params=
comment22.target=boolean\ cursor_down()
comment22.text=\r\n\ Move\ cursor\ down\r\n\ \r\n\ @returns\ whether\ the\ operation\ worked\r\n
comment23.params=line_count
comment23.target=boolean\ cursor_down(int)
comment23.text=\r\n\ Move\ cursor\ down\r\n\ \r\n\ @param\ line_count\ dist\ to\ move\r\n\ \r\n\ @returns\ whether\ cursor\ moved\ at\ all\r\n
comment24.params=
comment24.target=boolean\ cursor_move_first_line()
comment24.text=\r\n\ Move\ cursor\ all\ the\ way\ up\r\n\ \r\n\ @returns\ whether\ cursor\ moved\ at\ all\r\n
comment25.params=
comment25.target=boolean\ cursor_move_last_line()
comment25.text=\r\n\ Move\ cursor\ all\ the\ way\ down\r\n\ \r\n\ @returns\ whether\ cursor\ moved\ at\ all\r\n
comment26.params=
comment26.target=boolean\ cursor_move_start_line()
comment26.text=\r\n\ Move\ cursor\ all\ the\ way\ left\r\n\ \r\n\ @returns\ whether\ cursor\ moved\ at\ all\r\n
comment27.params=
comment27.target=boolean\ cursor_move_end_line()
comment27.text=\r\n\ Move\ cursor\ all\ the\ way\ right\r\n\ \r\n\ @returns\ whether\ cursor\ moved\ at\ all\r\n
comment28.params=
comment28.target=boolean\ remove_line()
comment28.text=\r\n\ Remove\ current\ line\r\n\ \r\n\ @returns\ whether\ the\ operation\ worked\r\n
comment29.params=
comment29.target=boolean\ remove_char_toleft()
comment29.text=\r\n\ Remove\ 1\ char\ left\ of\ cursor\r\n\ \r\n\ @returns\ whether\ char\ was\ removed\r\n
comment3.params=line
comment3.target=java.lang.String\ toString(int)
comment3.text=\r\n\ Returns\ the\ specified\ line\ in\ the\ structure.\r\n\ \r\n\ @param\ line\ line\ to\ return\ the\ contents\ of\r\n
comment30.params=char_count
comment30.target=boolean\ remove_char_toleft(int)
comment30.text=\r\n\ Remove\ chars\ left\ of\ cursor\r\n\ \r\n\ @param\ char_count\ chars\ to\ delete\r\n\ \r\n\ @returns\ whether\ char\ was\ removed\r\n
comment31.params=str_value
comment31.target=boolean\ insert_text(java.lang.String)
comment31.text=\r\n\ Insert\ text\ at\ cursor\r\n\ \r\n\ Assumption\:\ If\ there\ are\ no\ lines,\ create\ one\r\n\ \r\n\ @param\ str_value\ string\ to\ insert\r\n\ \r\n\ @returns\ whether\ insert\ worked\r\n
comment32.params=char_value
comment32.target=boolean\ insert_text(char)
comment32.text=\r\n\ Insert\ char\ at\ cursor\r\n\ \r\n\ @param\ char_value\ char\ to\ insert\r\n\ \r\n\ @returns\ whether\ insert\ worked\r\n
comment33.params=index
comment33.target=StructNode\ get_node(int)
comment33.text=\r\n\ Returns\ the\ node\ at\ the\ specified\ index\r\n\ \r\n\ @param\ index\ index\ of\ node\ to\ get\r\n
comment34.params=
comment34.target=GapBufferInterface\ get_new_type_obj()
comment34.text=\r\n\ Returns\ a\ new\ object\ of\ the\ type\ specified\ by\ the\ 'type'\ string.\r\n
comment4.params=
comment4.target=java.lang.String\ toString()
comment4.text=\r\n\ Returns\ the\ line\ the\ cursor\ is\ currently\ on.\r\n
comment5.params=
comment5.target=java.lang.String\ cursorString()
comment5.text=\r\n\ Returns\ the\ line\ with\ the\ cursor\ position\ indicated.\ For\ gap\ buffer,\ this\ means\ the\ array\ with\ empty\ spaces\ as\ '-'.\ \r\n\ For\ linked\ list\ buffer,\ cursor\ is\ indicated\ by\ a\ specified\ character.\r\n
comment6.params=
comment6.target=java.lang.String\ toStringStruct()
comment6.text=\r\n\ Prints\ out\ the\ entire\ structure,\ with\ lines\ separated\ with\ newlines.\r\n
comment7.params=str_value
comment7.target=void\ load_line_at_start(java.lang.String)
comment7.text=\r\n\ Creates\ a\ new\ line\ at\ the\ top\ of\ the\ structure\ and\ fills\ it\ with\ the\ desired\ data.\r\n\ \r\n\ Assumption\:\ Cursor\ should\ move\ with\ the\ line\ it\ was\ previously\ on.\r\n\ \r\n\ @param\ str_value\ String\ to\ pass\ and\ store\ to\ buffer\ \r\n
comment8.params=str_value
comment8.target=void\ load_line_at_end(java.lang.String)
comment8.text=\r\n\ Creates\ a\ new\ line\ at\ the\ bottom\ of\ the\ structure\ and\ loads\ the\ desired\ data\ to\ it.\r\n\ \r\n\ Assumption\:\ Cursor\ should\ stay\ put.\r\n\ \r\n\ @param\ str_value\ String\ to\ pass\ and\ store\ to\ buffer\r\n
comment9.params=str_value\ position
comment9.target=void\ load_line_at_position(java.lang.String,\ int)
comment9.text=\r\n\ Loads\ specified\ line\ at\ specified\ position.\r\n\ \r\n\ Assumption\:\ Cursor\ should\ shift\ down\ if\ lines\ are\ loaded\ above\ or\ at\ it's\ position.\r\n\ \r\n\ @param\ str_value\ String\ to\ load\ in\ to\ buffer\r\n\ @param\ position\ \ index\ to\ add\ the\ line\ in\ at\r\n
numComments=35
