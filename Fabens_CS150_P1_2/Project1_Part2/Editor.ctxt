#BlueJ class context
comment0.target=Editor
comment0.text=\r\n\ The\ face\ of\ the\ data\ structure.\ Allows\ a\ user\ to\ interact\ with\ the\ structure\ from\ the\ command\ line.\r\n\r\n\ @author\ Peter\ Fabens\r\n\ @version\ 3/4/2022\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\r\n\ Main\ method.\ Handles\ sending\ commands\ to\ the\ editor.\r\n\ \r\n\ @param\ args\ \ Controls\ the\ type\ of\ buffer\ to\ use\ in\ the\ structure.\ Options\ are\ "linked"\ and\ "gap".\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ Defaults\ to\ "linked"\ if\ input\ is\ invalid\ or\ not\ given.\r\n
comment10.params=
comment10.target=java.lang.String\ current_file_name()
comment10.text=Name\ of\ file\ currently\ loaded
comment11.params=
comment11.target=int\ cursor_line_position()
comment11.text=Index\ of\ line\ cursor\ is\ on
comment12.params=
comment12.target=int\ cursor_position_in_line()
comment12.text=Index\ of\ cursor\ within\ current\ line
comment13.params=
comment13.target=java.lang.String\ toStringLine()
comment13.text=Text\ contents\ of\ current\ line
comment2.params=type
comment2.target=Editor(java.lang.String)
comment2.text=\r\n\ Default\ constructor.\r\n\ \r\n\ @param\ type\ type\ of\ text\ buffer\ to\ use.\r\n
comment3.params=
comment3.target=void\ kill_scanner()
comment3.text=\r\n\ Kills\ the\ System\ input\ scanner,\ for\ unit\ testing\ purposes.\r\n
comment4.params=input
comment4.target=boolean\ execute(java.lang.String)
comment4.text=\r\n\ Parse\ the\ command\ into\ command\ keyword\ and\ arguments,\ and\ then\ do\ different\ things\ for\ each\ command\r\n\ \r\n\ @param\ input\ complete\ user\ input\r\n
comment5.params=
comment5.target=void\ cursor_print()
comment5.text=\r\n\ Returns\ a\ string\ for\ the\ cursor\ representation\ of\ the\ current\ document\ line,\ with\ a\ space\ at\ the\ cursor\ and\ a\ ^\ pointing\ at\ the\ cursor\ from\ below\r\n
comment6.params=input
comment6.target=java.lang.String\ format_filename(java.lang.String)
comment6.text=\r\n\ Takes\ a\ string\ an\ normalizes\ it\ in\ to\ a\ valid\ filename,\ possibly\ butchering\ it\ if\ the\ input\ was\ bad.\ Sorry\ not\ sorry,\ learn\ how\ to\ name\ a\ file.\r\n\ \r\n\ @param\ input\ string\ to\ filenameify.\ valid\ extensions\ are\ .txt,\ .csv,\ and\ .java.\ Anything\ else\ will\ be\ turned\ in\ to\ .txt\r\n\ \r\n\ @returns\ formatted\ filename\r\n
comment7.params=
comment7.target=int\ line_length()
comment7.text=Length\ of\ line\ cursor\ is\ on
comment8.params=line
comment8.target=int\ line_length(int)
comment8.text=\ Length\ of\ line\ specified\ \r\n@param\ line\ index\ of\ line\ to\ get\ length\ of
comment9.params=
comment9.target=int\ line_count()
comment9.text=Number\ of\ lines\ in\ document
numComments=14
