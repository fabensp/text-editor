#BlueJ class context
comment0.target=Document
comment0.text=\r\n\ Document\ keeps\ track\ of\ IO\ and\ all\ of\ the\ operations\ done\ by\ the\ buffer\ structure.\ The\ heart\ of\ the\ editor.\r\n\r\n\ @author\ Peter\ Fabens\r\n\ @version\ 2/20/2022\r\n
comment1.params=type
comment1.target=Document(java.lang.String)
comment1.text=\r\n\ Initializes\ the\ BufferStructure\ and\ DocumentIO\ objects.\r\n
comment10.params=line_index
comment10.target=int\ line_length(int)
comment10.text=\ Returns\ length\ of\ a\ specified\ line\ \r\n@param\ line_index\ index\ of\ line\ to\ return\ the\ length\ of
comment11.params=
comment11.target=int\ line_length()
comment11.text=Returns\ length\ of\ whatever\ line\ the\ cursor\ is\ currently\ on
comment12.params=
comment12.target=int\ line_count()
comment12.text=Returns\ number\ of\ lines\ in\ the\ document
comment13.params=
comment13.target=int\ cursor_position_in_line()
comment13.text=\r\n\ Returns\ index\ of\ the\ cursor's\ position\ within\ the\ line\r\n
comment14.params=
comment14.target=int\ cursor_line_position()
comment14.text=\r\n\ Returns\ the\ index\ of\ the\ line\ the\ cursor\ is\ on\ currently.\r\n
comment15.params=
comment15.target=boolean\ cursor_left()
comment15.text=Moves\ cursor\ one\ char\ left
comment16.params=char_count
comment16.target=boolean\ cursor_left(int)
comment16.text=\ Moves\ cursor\ to\ the\ left\ \r\n@param\ char_count\ number\ of\ characters\ to\ move
comment17.params=
comment17.target=boolean\ cursor_right()
comment17.text=Moves\ cursor\ one\ char\ to\ the\ right
comment18.params=char_count
comment18.target=boolean\ cursor_right(int)
comment18.text=\ Moves\ cursor\ to\ the\ right\ \r\n@param\ char_count\ number\ of\ characters\ to\ move
comment19.params=
comment19.target=boolean\ cursor_up()
comment19.text=Moves\ cursor\ up\ one\ line
comment2.params=filename
comment2.target=boolean\ load_file(java.lang.String)
comment2.text=\r\n\ Overwrites\ current\ contents\ of\ the\ BufferStructure\ with\ the\ contents\ of\ a\ file.\r\n\ \r\n\ @param\ filename\ name\ of\ file\ to\ read\ from\r\n
comment20.params=line_count
comment20.target=boolean\ cursor_up(int)
comment20.text=\ Moves\ cursor\ up\ \r\n@param\ line_count\ number\ of\ lines\ to\ move
comment21.params=
comment21.target=boolean\ cursor_down()
comment21.text=Moves\ cursor\ down\ one\ line
comment22.params=line_count
comment22.target=boolean\ cursor_down(int)
comment22.text=\ Moves\ cursor\ down\ \r\n@param\ line_count\ number\ of\ lines\ to\ move
comment23.params=
comment23.target=boolean\ cursor_move_end_line()
comment23.text=Moves\ cursor\ to\ end\ of\ current\ line
comment24.params=
comment24.target=boolean\ cursor_move_start_line()
comment24.text=Moves\ cursor\ to\ start\ of\ current\ line
comment25.params=
comment25.target=boolean\ cursor_move_last_line()
comment25.text=Moves\ cursor\ to\ last\ line
comment26.params=
comment26.target=boolean\ cursor_move_first_line()
comment26.text=Moves\ cursor\ to\ first\ line
comment27.params=
comment27.target=boolean\ insert_line_above()
comment27.text=Inserts\ an\ empty\ line\ directly\ above\ the\ cursor
comment28.params=
comment28.target=boolean\ insert_line_below()
comment28.text=Inserts\ an\ empty\ line\ directly\ below\ the\ cursor
comment29.params=
comment29.target=boolean\ remove_line()
comment29.text=Removes\ the\ line\ that\ the\ cursor\ is\ on
comment3.params=filename
comment3.target=boolean\ store_file(java.lang.String)
comment3.text=\r\n\ Writes\ current\ contents\ of\ the\ BufferStructure\ to\ a\ specified\ file.\r\n\ \r\n\ @param\ filename\ name\ of\ file\ to\ write\ to.\r\n
comment30.params=
comment30.target=boolean\ remove_char_toleft()
comment30.text=Removes\ char\ directly\ above\ cursor\ in\ char\ array,\ and\ moves\ cursor\ up\ to\ that\ empty\ space
comment31.params=char_count
comment31.target=boolean\ remove_char_toleft(int)
comment31.text=\ Removes\ chars\ directly\ above\ cursor\ in\ char\ array,\ and\ moves\ cursor\ up\ to\ the\ first\ empty\ space\ \r\n@param\ char_count\ chars\ to\ remove
comment32.params=str_value
comment32.target=boolean\ insert_text(java.lang.String)
comment32.text=\ Insert\ a\ string\ at\ the\ current\ cursor\ position\ \r\n@param\ str_value\ string\ to\ insert
comment33.params=char_value
comment33.target=boolean\ insert_text(char)
comment33.text=\ Insert\ a\ char\ at\ the\ current\ cursor\ positon\ \r\n@param\ char_value\ char\ to\ insert
comment4.params=
comment4.target=boolean\ store_file()
comment4.text=\r\n\ Writes\ current\ contents\ of\ the\ BufferStructure\ to\ whatever\ file\ is\ already\ open\r\n\ \r\n\ @throws\ NullPointerException\ if\ attempting\ to\ store\ to\ a\ file\ that\ has\ not\ been\ identified,\ either\ by\ loading\ or\ storing\r\n
comment5.params=
comment5.target=java.lang.String\ current_file_name()
comment5.text=Returns\ current\ file\ name
comment6.params=file
comment6.target=boolean\ file_exists(java.lang.String)
comment6.text=\ Returns\ whether\ a\ given\ file\ exists\r\n@param\ file\ file\ to\ check\ for
comment7.params=
comment7.target=java.lang.String\ toStringDocument()
comment7.text=Returns\ complete\ contents\ of\ document,\ with\ lines\ separated\ by\ \\n
comment8.params=line_index
comment8.target=java.lang.String\ toStringLine(int)
comment8.text=\ Returns\ string\ representation\ of\ a\ specified\ line\ \r\n@param\ line_index\ index\ of\ line\ to\ return
comment9.params=
comment9.target=java.lang.String\ toStringLine()
comment9.text=\ Returns\ string\ representation\ of\ current\ line\r\n
numComments=34
